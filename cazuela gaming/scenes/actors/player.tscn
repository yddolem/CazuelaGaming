[gd_scene load_steps=26 format=3 uid="uid://cxp7qrflq4hjg"]

[ext_resource type="Texture2D" uid="uid://b3w0t8uj1bv7w" path="res://assets/animaciones conejo/respirando.png" id="2_jt7pw"]
[ext_resource type="Texture2D" uid="uid://dgwdoos86kuys" path="res://assets/animaciones conejo/saltando.png" id="3_dtf6o"]
[ext_resource type="Texture2D" uid="uid://4qiibsers4s2" path="res://assets/animaciones conejo/caminando.png" id="4_ssili"]

[sub_resource type="GDScript" id="GDScript_h3x6a"]
script/source = "extends CharacterBody2D


const SPEED = 200.0
const JUMP_VELOCITY = -200.0


const GRAVITY = 400
const ACCELERATION= 1000

var portal_id := 0 
var isAirborne = false

var positions : PackedVector2Array = []

signal PlayerInverted(isInverted)
signal enviarInputs(inputs)

@onready var pivot= $Pivot
@onready var timer = $Timer
@onready var animation_player = $AnimationPlayer
@onready var animation_tree = $AnimationTree
@onready var playback=animation_tree.get(\"parameters/playback\")
var stunned = false
var canJump = true
var isInverted = false
var isJumping = false
var airbornePoints = null
var inputs = []

func _ready():
	animation_tree.active = true
	set_process_input(true)

func _physics_process(delta):

	if is_on_floor():
		canJump = true
		isAirborne = false #No est√° saltando ni cayendo
		isJumping = false #No esta saltando



	if is_on_floor() == false:
		velocity.y += GRAVITY * delta



	if stunned==false:
		# Handle Jump.
		if Input.is_action_just_pressed(\"jump\") and canJump:
			isJumping = true
			velocity.y=JUMP_VELOCITY
			canJump = false
			isAirborne = true
		
		var direction = Input.get_axis(\"move_left\",\"move_right\")
		
		if is_on_floor():
			velocity.x = move_toward(velocity.x,direction*SPEED ,ACCELERATION*delta)
		
		move_and_slide()
		
		#Animation
		if direction and is_on_floor():
			pivot.scale.x=sign(direction)
		if is_on_floor():
			
			if velocity.x!=0 or direction:
				playback.travel(\"run\")
			
			else:
				playback.travel(\"idle\")
		else:
			if velocity.y<0:
				playback.travel(\"jump\")
				
		if isInverted == false:
			saveInput()
			
			
	
	if stunned == true:
		playback.travel(\"idle\")
		



func Teleport(area):
	for portal in get_tree().get_nodes_in_group(\"portal\"):
		if portal!= area:
			if (portal.id==area.id):
				if (!portal.lockPortal):
					area.LockedPortal()
					

					stunned=true
					await(get_tree().create_timer(2).timeout)
					
					global_position=portal.global_position

					stunned=false
					isInverted = true
					PlayerInverted.emit(isInverted)
					enviarInputs.emit(inputs)
					
				
func _on_area_2d_area_entered(area):
	if (area.is_in_group(\"portal\")):

		
		if (!area.lockPortal):
			
			Teleport(area)



func saveInput():
	if isAirborne == false:
		var direction = -Input.get_axis(\"move_left\", \"move_right\")
		inputs.append(direction)
	
	if isAirborne == true:
		pass
		
		
		


"

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_bl0aj"]
height = 50.0

[sub_resource type="Animation" id="Animation_qfvhw"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Pivot/Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Pivot/Sprite2D:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("2_jt7pw")]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Pivot/Sprite2D:hframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}

[sub_resource type="Animation" id="Animation_u64vw"]
resource_name = "idle"
length = 1.2
loop_mode = 1
step = 0.3
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Pivot/Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.3, 0.6, 0.9),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Pivot/Sprite2D:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("2_jt7pw")]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Pivot/Sprite2D:hframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}

[sub_resource type="Animation" id="Animation_b3pkv"]
resource_name = "jump"
length = 1.5
loop_mode = 1
step = 0.2
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Pivot/Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4, 0.6, 0.8, 1, 1.2),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3, 4, 5, 6]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Pivot/Sprite2D:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [8]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Pivot/Sprite2D:texture")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("3_dtf6o")]
}

[sub_resource type="Animation" id="Animation_uor05"]
resource_name = "run"
length = 1.1
loop_mode = 1
step = 0.2
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Pivot/Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [ExtResource("4_ssili"), ExtResource("4_ssili")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Pivot/Sprite2D:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Pivot/Sprite2D:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4, 0.6, 0.8),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3, 3]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_olk7j"]
_data = {
"RESET": SubResource("Animation_qfvhw"),
"idle": SubResource("Animation_u64vw"),
"jump": SubResource("Animation_b3pkv"),
"run": SubResource("Animation_uor05")
}

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_arhuf"]
animation = &"idle"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_hh2r1"]
animation = &"jump"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_amq43"]
animation = &"run"

[sub_resource type="AnimationNodeTimeScale" id="AnimationNodeTimeScale_0dcfa"]

[sub_resource type="AnimationNodeBlendTree" id="AnimationNodeBlendTree_i2ifv"]
graph_offset = Vector2(-377.399, 121.92)
nodes/Animation/node = SubResource("AnimationNodeAnimation_amq43")
nodes/Animation/position = Vector2(25.9082, 241.925)
nodes/TimeScale/node = SubResource("AnimationNodeTimeScale_0dcfa")
nodes/TimeScale/position = Vector2(266.667, 240)
nodes/output/position = Vector2(480, 240)
node_connections = [&"output", 0, &"TimeScale", &"TimeScale", 0, &"Animation"]

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_ehn26"]
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_d23ra"]

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_7etla"]
switch_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_nakvo"]

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_1114g"]

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_u3mhy"]

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_eix6c"]

[sub_resource type="AnimationNodeStateMachine" id="AnimationNodeStateMachine_cpuqs"]
states/Start/position = Vector2(200, 65)
states/idle/node = SubResource("AnimationNodeAnimation_arhuf")
states/idle/position = Vector2(407, 19)
states/jump/node = SubResource("AnimationNodeAnimation_hh2r1")
states/jump/position = Vector2(515, 141)
states/run/node = SubResource("AnimationNodeBlendTree_i2ifv")
states/run/position = Vector2(567.333, 17.5556)
transitions = ["Start", "idle", SubResource("AnimationNodeStateMachineTransition_ehn26"), "idle", "jump", SubResource("AnimationNodeStateMachineTransition_d23ra"), "jump", "idle", SubResource("AnimationNodeStateMachineTransition_7etla"), "idle", "run", SubResource("AnimationNodeStateMachineTransition_nakvo"), "run", "idle", SubResource("AnimationNodeStateMachineTransition_1114g"), "run", "jump", SubResource("AnimationNodeStateMachineTransition_u3mhy"), "jump", "run", SubResource("AnimationNodeStateMachineTransition_eix6c")]
graph_offset = Vector2(98, -12)

[sub_resource type="AnimationNodeStateMachinePlayback" id="AnimationNodeStateMachinePlayback_cdlqk"]

[sub_resource type="AnimationNodeStateMachinePlayback" id="AnimationNodeStateMachinePlayback_aeg08"]

[node name="Player" type="CharacterBody2D"]
script = SubResource("GDScript_h3x6a")

[node name="Pivot" type="Node2D" parent="."]

[node name="Sprite2D" type="Sprite2D" parent="Pivot"]
position = Vector2(-1, 3)
scale = Vector2(0.8, 0.8)
texture = ExtResource("2_jt7pw")
hframes = 4

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, 3)
shape = SubResource("CapsuleShape2D_bl0aj")
debug_color = Color(0, 0.6, 0.701961, 0.419608)

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
speed_scale = 64.0
libraries = {
"": SubResource("AnimationLibrary_olk7j")
}

[node name="AnimationTree" type="AnimationTree" parent="."]
tree_root = SubResource("AnimationNodeStateMachine_cpuqs")
anim_player = NodePath("../AnimationPlayer")
parameters/playback = SubResource("AnimationNodeStateMachinePlayback_cdlqk")
parameters/run/TimeScale/scale = 2.0

[node name="AnimationTree2" type="AnimationTree" parent="."]
tree_root = SubResource("AnimationNodeStateMachine_cpuqs")
anim_player = NodePath("../AnimationPlayer")
parameters/playback = SubResource("AnimationNodeStateMachinePlayback_aeg08")
parameters/run/TimeScale/scale = 2.0

[node name="Area2D" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
position = Vector2(0, 3)
shape = SubResource("CapsuleShape2D_bl0aj")

[node name="Timer" type="Timer" parent="."]
process_callback = 0
wait_time = 0.5

[connection signal="area_entered" from="Area2D" to="." method="_on_area_2d_area_entered"]
